<Window x:Class="CSharpImageLibrary.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:CSharpImageLibrary"
        xmlns:useful="clr-namespace:UsefulThings.WPF;assembly=UsefulThings"
        xmlns:UsefulWPF="clr-namespace:UsefulThings.WPF;assembly=UsefulThings"
        mc:Ignorable="d"
        Title="Image Engine" Height="706.296" x:Name="ThisWindow" Width="1137.211" KeyDown="Window_KeyDown" Drop="ThisWindow_Drop" AllowDrop="True" Icon="ImageEngine.ico">
    <Window.Resources>
        <ControlTemplate x:Key="CheckBoxControlTemplate1" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="{TemplateBinding Foreground}" Margin="1" Opacity="0" Stretch="None"/>
                        <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <Grid.Resources>
            <sys:Boolean x:Key="True">
                True
            </sys:Boolean>
            <useful:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
            <useful:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <ObjectDataProvider MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}"
                        x:Key="Formats">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:ImageEngineFormat"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="566*"/>
            <ColumnDefinition Width="563*" x:Name="SaveColumn"/>
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Column="0">
            <Grid DockPanel.Dock="Bottom" Height="35">
                <Button x:Name="LoadButton" Content="Load" DockPanel.Dock="Bottom" HorizontalAlignment="Center" VerticalAlignment="Center" Click="LoadButton_Click" FontSize="16"/>
                <CheckBox x:Name="DDSHeaderCheckBox" Content="Show DDS Header info" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <CheckBox Content="Show alpha channel" IsChecked="{Binding ShowAlphaPreviews, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Bottom" DockPanel.Dock="Bottom"/>
                <Button x:Name="OpenConvertPanel" HorizontalAlignment="Right" Content="Convert &gt;&gt;" VerticalAlignment="Center" Click="OpenConvertPanel_Click" Margin="0,0,9.667,2.333"/>
            </Grid>
            <Grid DockPanel.Dock="Bottom" VerticalAlignment="Bottom" Height="117" Margin="0,0,-0.333,0">
                <StackPanel Height="68" VerticalAlignment="Top" IsHitTestVisible="False">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=DDSHeaderCheckBox}" Value="true">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock><Run Text="Image Path:    " FontWeight="Bold"/><Run Text=" "/><Run Text="{Binding ImagePath, Mode=OneWay}"/></TextBlock>
                    <TextBlock><Run Text="Format:    " FontWeight="Bold"/><Run Text=" "/><Run Text="{Binding Format, Mode=OneWay}"/></TextBlock>
                    <TextBlock><Run Text="Mipmap Width:    " FontWeight="Bold"/><Run Text=" "/><Run Text="{Binding MipWidth, Mode=OneWay}"/></TextBlock>
                    <TextBlock><Run Text="Mipmap Height:    " FontWeight="Bold"/><Run Text=" "/><Run Text="{Binding MipHeight, Mode=OneWay}"/></TextBlock>
                </StackPanel>
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="FontSize" Value="10"/>
                        </Style>
                    </StackPanel.Resources>

                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=DDSHeaderCheckBox}" Value="true">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <TextBlock Text="Header" FontWeight="Bold" FontSize="9"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock><Run Text="dwSize: " FontWeight="Bold"/><Run Text=" "/><Run Text="{Binding img.header.dwSize, Mode=OneWay}"/></TextBlock>

                        <TextBlock Margin="10,0,0,0"><Run Text="PitchOrLinearSize: " FontWeight="Bold"/><Run Text=" "/><Run Text="{Binding img.header.dwPitchOrLinearSize}"/></TextBlock>

                        <TextBlock Margin="10,0,0,0"><Run Text="Depth: " FontWeight="Bold"/><Run Text=" "/><Run Text="{Binding img.header.dwDepth}"/></TextBlock>

                        <TextBlock Margin="10,0,0,0"><Run Text="MipMapCount: " FontWeight="Bold"/><Run Text=" "/><Run Text="{Binding img.header.dwMipMapCount}"/></TextBlock>
                    </StackPanel>

                    <TextBlock><Run Text="dwFlags: " FontWeight="Bold"/><Run Text=" "/><Run Text="{Binding img.HeaderdwFlags, Mode=OneWay}"/></TextBlock>

                    <TextBlock><Run Text="dwCaps: " FontWeight="Bold"/><Run Text=" "/><Run Text="{Binding img.HeaderdwCaps, Mode=OneWay}"/></TextBlock>

                    <TextBlock Text="Header PixelFormat" FontWeight="Bold" FontSize="8" FontStyle="Italic" Margin="0,10,0,0"/>

                    <TextBlock><Run Text="dwFlags: " FontWeight="Bold" FontStyle="Italic"/><Run Text=" "/><Run Text="{Binding img.HeaderPFdwFlags, Mode=OneWay}" FontStyle="Italic"/></TextBlock>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock><Run Text="dwSize: " FontWeight="Bold" FontStyle="Italic"/><Run Text=" "/><Run Text="{Binding img.header.ddspf.dwSize}" FontStyle="Italic"/></TextBlock>

                        <TextBlock Margin="10,0,0,0"><Run Text="dwFourCC: " FontWeight="Bold" FontStyle="Italic"/><Run Text=" "/><Run Text="{Binding img.header.ddspf.dwFourCC}" FontStyle="Italic"/></TextBlock>

                        <TextBlock Margin="10,0,0,0"><Run Text="dwRGBBitCount: " FontWeight="Bold" FontStyle="Italic"/><Run Text=" "/><Run Text="{Binding img.header.ddspf.dwRGBBitCount}" FontStyle="Italic"/></TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock><Run Text="dwRBitMask: " FontWeight="Bold" FontStyle="Italic"/><Run Text=" "/><Run Text="{Binding img.header.ddspf.dwRBitMask}" FontStyle="Italic"/></TextBlock>

                        <TextBlock Margin="10,0,0,0"><Run Text="dwGBitMask: " FontWeight="Bold" FontStyle="Italic"/><Run Text=" "/><Run Text="{Binding img.header.ddspf.dwGBitMask}" FontStyle="Italic"/></TextBlock>

                        <TextBlock Margin="10,0,0,0"><Run Text="dwBBitMask: " FontWeight="Bold" FontStyle="Italic"/><Run Text=" "/><Run Text="{Binding img.header.ddspf.dwBBitMask}" FontStyle="Italic"/></TextBlock>

                        <TextBlock Margin="10,0,0,0"><Run Text="dwABitMask: " FontWeight="Bold" FontStyle="Italic"/><Run Text=" "/><Run Text="{Binding img.header.ddspf.dwABitMask}" FontStyle="Italic"/></TextBlock>
                    </StackPanel>

                </StackPanel>
            </Grid>

            <DockPanel DockPanel.Dock="Right">
                <Label Content="Mipmaps" FontWeight="Bold" DockPanel.Dock="Top"/>
                <TextBlock Text="{Binding NumMipMaps, StringFormat=Max: {0}}" DockPanel.Dock="Top" HorizontalAlignment="Center"/>
                <Grid DockPanel.Dock="Bottom" Margin="0,10,0,0" Height="54">
                    <Label Content="Background" FontWeight="Bold" VerticalAlignment="Top"/>
                    <CheckBox x:Name="BlackCheckbox" Background="Black" Foreground="White" VerticalAlignment="Bottom" HorizontalAlignment="Right" BorderBrush="#FFCCE7FF" BorderThickness="2" Template="{DynamicResource CheckBoxControlTemplate1}">
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                        </CheckBox.LayoutTransform>
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="IsChecked" Value="False"/>
                                <Setter Property="IsHitTestVisible" Value="true"/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=WhiteCheckbox, Path=IsChecked}" Value="false">
                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>

                    <CheckBox x:Name="WhiteCheckbox" Background="White" VerticalAlignment="Bottom" HorizontalAlignment="Left" BorderBrush="#FFCCE7FF" BorderThickness="2">
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                        </CheckBox.LayoutTransform>
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="IsChecked" Value="True"/>
                                <Setter Property="IsHitTestVisible" Value="False"/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=BlackCheckbox, Path=IsChecked}" Value="true">
                                        <Setter Property="IsChecked" Value="False"/>
                                        <Setter Property="IsHitTestVisible" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </Grid>
                <TextBlock Text="{Binding Value, ElementName=MipSlider, StringFormat=Selected: {0}}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"/>
                <Slider x:Name="MipSlider" Orientation="Vertical" HorizontalAlignment="Center" Interval="1" Minimum="1" Maximum="{Binding NumMipMaps}" TickFrequency="1" TickPlacement="TopLeft" IsSnapToTickEnabled="True" Value="{Binding MipIndex}"/>
            </DockPanel>

            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Background" Value="White"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=BlackCheckbox, Path=IsChecked}" Value="true">
                                <Setter Property="Background" Value="Black"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Image Source="{Binding Preview}"/>
            </Grid>
        </DockPanel>

        <DockPanel Grid.Column="1" Margin="10,0,0,0">
            <Ellipse Width="2" Margin="10,0" Fill="#FFACACAC" Height="2" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" DockPanel.Dock="Left">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="280"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
            </Ellipse>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Center">
                <Button x:Name="SaveButton" Content="Save" HorizontalAlignment="Center" FontSize="16" Click="SaveButton_Click" IsEnabled="{Binding IsSaveReady}"/>

                <Canvas x:Name="SuccessfulSaveMessage" Margin="5,0,0,0">
                    <Canvas.RenderTransform>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Canvas.RenderTransform>

                    <Ellipse Fill="Lime" Canvas.Top="2" Width="20" Height="20">
                        <Ellipse.Effect>
                            <DropShadowEffect ShadowDepth="1" BlurRadius="5"/>
                        </Ellipse.Effect>
                    </Ellipse>
                    <TextBlock Text="ü" FontWeight="Bold" Foreground="White" FontFamily="Wingdings" Canvas.Left="2" Canvas.Top="4" FontSize="18.667">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="1"/>
                        </TextBlock.Effect>
                    </TextBlock>
                    <TextBlock Canvas.Left="25" Canvas.Top="3" Text="{Binding SaveElapsedTime, StringFormat=Successfully saved in {0}ms!}"/>
                </Canvas>

                <Canvas x:Name="FailedSaveMessage" Margin="5,0,0,0">
                    <Canvas.RenderTransform>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Canvas.RenderTransform>

                    <Ellipse Fill="Red" Canvas.Top="2" Width="20" Height="20">
                        <Ellipse.Effect>
                            <DropShadowEffect ShadowDepth="1" BlurRadius="5"/>
                        </Ellipse.Effect>
                    </Ellipse>
                    <TextBlock Text="û" FontWeight="Bold" Foreground="White" FontFamily="Wingdings" Canvas.Left="4" Canvas.Top="3" FontSize="18.667">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="1"/>
                        </TextBlock.Effect>
                    </TextBlock>
                    <Label x:Name="SaveFailedLabel" Canvas.Left="20" Content=" Saving failed! Click for details." MouseDown="SaveFailedLabel_MouseDown"/>
                </Canvas>
            </StackPanel>
            <DockPanel DockPanel.Dock="Bottom" LastChildFill="False" Margin="0,3">
                <ComboBox x:Name="MipSetting" DockPanel.Dock="Left" VerticalAlignment="Center" ItemsSource="{UsefulWPF:EnumToItemsSource {x:Type local:MipHandling}}" DisplayMemberPath="DisplayName" SelectedValue="{Binding GenerateMipMaps, Mode=TwoWay}" SelectedValuePath="Value" IsSynchronizedWithCurrentItem="True"/>
                <TextBlock x:Name="MipSettingDescription" DockPanel.Dock="Left" VerticalAlignment="Center" Text="{Binding ElementName=MipSetting, Path=SelectedValue, Converter={StaticResource EnumDescriptionConverter}}" Foreground="Gray" IsEnabled="False" FontSize="10"/>
                <ComboBox x:Name="FormatComboBox" DockPanel.Dock="Right" SelectionChanged="FormatComboBox_SelectionChanged" ItemsSource="{Binding Source={StaticResource Formats}}" SelectedItem="{Binding SaveFormat, Mode=TwoWay}"/>
                <Label Content="Format" DockPanel.Dock="Right"/>
            </DockPanel>
            <DockPanel x:Name="DXT1AlphaPanel" DockPanel.Dock="Bottom">
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Collapsed"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDXT1AlphaVisible}" Value="true">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
                <DockPanel.Resources>
                    <Style TargetType="CheckBox">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="5,0,10,0"/>
                    </Style>
                </DockPanel.Resources>
                <Label Content="Alpha blending: "/>
                <CheckBox Content="Remove" IsChecked="{Binding StripAlpha}"/>
                <CheckBox Content="Flatten" IsChecked="{Binding FlattenBlend}"/>
                <Label Content="Alpha Threshold:" IsEnabled="{Binding FlattenBlend}"/>
                <TextBlock Text="{Binding DXT1AlphaThreshold}" DockPanel.Dock="Right" VerticalAlignment="Center" IsEnabled="{Binding FlattenBlend}"/>
                <Slider Minimum="0" Maximum="100" Value="{Binding DXT1AlphaThreshold, Mode=TwoWay}" DockPanel.Dock="Right" VerticalAlignment="Center" IsEnabled="{Binding FlattenBlend}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Bottom" Margin="0,3">
                <Label Content="Save path: " DockPanel.Dock="Left"/>
                <Button x:Name="BrowseButton" Content="Browse" DockPanel.Dock="Right" Click="BrowseButton_Click"/>
                <TextBox Text="{Binding SavePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" KeyDown="TextBox_KeyDown"/>
            </DockPanel>
            <Label Content="NOTE: This preview may be at a lower resolution to prevent preview delays." DockPanel.Dock="Bottom" Foreground="Red" HorizontalAlignment="Center" FontSize="8"/>
            <Grid Margin="0,0,0,5" DockPanel.Dock="Top">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Background" Value="White"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=BlackCheckbox, Path=IsChecked}" Value="true">
                                <Setter Property="Background" Value="Black"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Image x:Name="SavePreviewer" Source="{Binding SavePreview}" />
            </Grid>
        </DockPanel>
    </Grid>

</Window>
